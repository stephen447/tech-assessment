schema {
  query: Query
}

type Query {
  ethereum: Ethereum
}

type Ethereum {
  dexTrades(
    options: QueryOptions
    quoteCurrency: EthereumCurrencySelector
  ): [EthereumDexTrades!]
}

input QueryOptions {
  limit: Int
  offset: Int
  desc: String
  asc: String
}

input EthereumCurrencySelector {
  is: String
  not: String
  in: [String!]
  notIn: [String!]
}

type EthereumDexTrades {
  baseCurrency: Currency
  tradeAmount(in: BaseCurrencyEnum): Float
  count: Int
}

type Currency {
  symbol: String
  name: String
  address: String
}

enum BaseCurrencyEnum {
  USD
  ETH
  BTC
  EUR
  JPY
  # Other supported currencies
}

# Additional types that might be referenced
type DateTime {
  date: String
  time: String
}

input DateSelector {
  is: String
  since: String
  till: String
}
